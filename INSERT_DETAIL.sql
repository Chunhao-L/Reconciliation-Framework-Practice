IF OBJECT_ID('dbo.INSERT_DETAIL_MOCK', 'P') IS NOT NULL
    DROP PROCEDURE dbo.INSERT_DETAIL_MOCK;
GO

CREATE PROCEDURE dbo.INSERT_DETAIL_MOCK
AS
BEGIN
    --MISMATCH
    INSERT INTO MAPPING_DETAIL (
        LOAD_PHASE, BATCH_ID, ENTITY_ID,
        SOURCE_OBJECT, SOURCE_COLUMN, SOURCE_VALUE,
        TARGET_OBJECT, TARGET_COLUMN, TARGET_VALUE,
        AUDIT_RESULT
    )
    SELECT 
        'RAW to STG',
        r.BATCH_ID,
        r.ENTITY_ID,
        'RAW_MOCKDATA', 'ENTITY_TYPE', r.ENTITY_TYPE,
        'STG_MOCKDATA', 'ENTITY_TYPE', s.ENTITY_TYPE,
        'VALUE_MISMATCH'
    FROM RAW_MOCKDATA r
    INNER JOIN STG_MOCKDATA s
        ON r.BATCH_ID = s.BATCH_ID
        AND r.ENTITY_ID = s.ENTITY_ID
    WHERE ISNULL(r.ENTITY_TYPE, '') <> ISNULL(s.ENTITY_TYPE, '');

    --MISSING DATA
    INSERT INTO MAPPING_DETAIL (
        LOAD_PHASE, BATCH_ID, ENTITY_ID,
        SOURCE_OBJECT, SOURCE_COLUMN, SOURCE_VALUE,
        TARGET_OBJECT, TARGET_COLUMN, TARGET_VALUE,
        AUDIT_RESULT
    )
    SELECT 
        'RAW to STG',
        r.BATCH_ID,
        r.ENTITY_ID,
        'RAW_MOCKDATA', 'BATCH_ID', CAST(r.BATCH_ID AS VARCHAR),
        'STG_MOCKDATA', 'BATCH_ID', NULL,
        'MISSING_IN_STG'
    FROM RAW_MOCKDATA r
    LEFT JOIN STG_MOCKDATA s
        ON r.BATCH_ID = s.BATCH_ID
        AND r.ENTITY_ID = s.ENTITY_ID
    WHERE s.BATCH_ID IS NULL

    UNION ALL

    SELECT 
        'RAW to STG',
        r.BATCH_ID,
        r.ENTITY_ID,
        'RAW_MOCKDATA', 'ENTITY_ID', CAST(r.ENTITY_ID AS VARCHAR),
        'STG_MOCKDATA', 'ENTITY_ID', NULL,
        'MISSING_IN_STG'
    FROM RAW_MOCKDATA r
    LEFT JOIN STG_MOCKDATA s
        ON r.BATCH_ID = s.BATCH_ID
        AND r.ENTITY_ID = s.ENTITY_ID
    WHERE s.BATCH_ID IS NULL

    UNION ALL

    SELECT 
        'RAW to STG',
        r.BATCH_ID,
        r.ENTITY_ID,
        'RAW_MOCKDATA', 'ENTITY_TYPE', r.ENTITY_TYPE,
        'STG_MOCKDATA', 'ENTITY_TYPE', NULL,
        'MISSING_IN_STG'
    FROM RAW_MOCKDATA r
    LEFT JOIN STG_MOCKDATA s
        ON r.BATCH_ID = s.BATCH_ID
        AND r.ENTITY_ID = s.ENTITY_ID
    WHERE s.BATCH_ID IS NULL;

    --UNEXPECTED DATA
    INSERT INTO MAPPING_DETAIL (
        LOAD_PHASE, BATCH_ID, ENTITY_ID,
        SOURCE_OBJECT, SOURCE_COLUMN, SOURCE_VALUE,
        TARGET_OBJECT, TARGET_COLUMN, TARGET_VALUE,
        AUDIT_RESULT
    )
    SELECT 
        'RAW to STG',
        s.BATCH_ID,
        s.ENTITY_ID,
        'RAW_MOCKDATA', 'BATCH_ID', NULL,
        'STG_MOCKDATA', 'BATCH_ID', CAST(s.BATCH_ID AS VARCHAR),
        'UNEXPECTED_IN_STG'
    FROM STG_MOCKDATA s
    LEFT JOIN RAW_MOCKDATA r
        ON s.BATCH_ID = r.BATCH_ID
        AND s.ENTITY_ID = r.ENTITY_ID
    WHERE r.BATCH_ID IS NULL

    UNION ALL

    SELECT 
        'RAW to STG',
        s.BATCH_ID,
        s.ENTITY_ID,
        'RAW_MOCKDATA', 'ENTITY_ID', NULL,
        'STG_MOCKDATA', 'ENTITY_ID', CAST(s.ENTITY_ID AS VARCHAR),
        'UNEXPECTED_IN_STG'
    FROM STG_MOCKDATA s
    LEFT JOIN RAW_MOCKDATA r
        ON s.BATCH_ID = r.BATCH_ID
        AND s.ENTITY_ID = r.ENTITY_ID
    WHERE r.BATCH_ID IS NULL

    UNION ALL

    SELECT 
        'RAW to STG',
        s.BATCH_ID,
        s.ENTITY_ID,
        'RAW_MOCKDATA', 'ENTITY_TYPE', NULL,
        'STG_MOCKDATA', 'ENTITY_TYPE', s.ENTITY_TYPE,
        'UNEXPECTED_IN_STG'
    FROM STG_MOCKDATA s
    LEFT JOIN RAW_MOCKDATA r
        ON s.BATCH_ID = r.BATCH_ID
        AND s.ENTITY_ID = r.ENTITY_ID
    WHERE r.BATCH_ID IS NULL;

END;

EXEC INSERT_DETAIL_MOCK;